using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.Diagnostics.HealthChecks;
using System.Net;
using System.Threading.Tasks;
using System.Linq;

namespace Iaas.Motors.Sales.Address.API.Controllers;

[Route("[controller]")]
[ApiController]
public class HealthController : ControllerBase
{
    private readonly HealthCheckService _healthCheckService;

    public HealthController(HealthCheckService healthCheckService)
    {
        _healthCheckService = healthCheckService;
    }

    /// <summary>
    /// My Custom Health check
    /// </summary>
    /// <remarks>
    /// Tests api liveness
    /// </remarks>
    /// <returns></returns>
    /// <response code="200">Return database status</response>
    /// <response code="500">In case of internal error</response>
    /// <response code="503">In case database connection fails</response>
    [HttpGet]
    [ProducesResponseType(StatusCodes.Status200OK)]
    [ProducesResponseType(StatusCodes.Status500InternalServerError)]
    [ProducesResponseType(StatusCodes.Status503ServiceUnavailable)]
    public async Task<IActionResult> Get()
    {
        HealthReport report = await _healthCheckService.CheckHealthAsync();

        var result = new
        {
            Status = report.Status.ToString(),
            Entries = report.Entries.Select(e => new { Type = e.Key, Description = e.Value.Description?.ToString() })
        };

        return report.Status == HealthStatus.Healthy ? Ok(result) : StatusCode((int)HttpStatusCode.ServiceUnavailable, result);

    }

}
